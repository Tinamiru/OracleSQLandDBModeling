-- STORED(오라클 서버의 캐시공간에 미리 저장된) PROCEDURE
-- UPDATE(쎄대여)
SELECT  PROD_ID, PROD_TOTALSTOCK
FROM    PROD
WHERE   PROD_ID = 'P101000001';
/
CREATE OR REPLACE PROCEDURE USP_PROD_TOTALSTOCK_UPDATE -- 실행이 아닌 컴파일되어 해시공간에 생성
IS
BEGIN
    UPDATE  PROD
    SET     PROD_TOTALSTOCK = PROD_TOTALSTOCK - 10
    WHERE   PROD_ID = 'P101000001';
    DBMS_OUTPUT.PUT_LINE('업데이트 성공');
    COMMIT;
END;
/
EXEC usp_prod_totalstock_update('P101000001');
/

SELECT  PROD_ID, PROD_TOTALSTOCK
FROM    PROD
WHERE   PROD_ID = 'P101000001';

CREATE OR REPLACE PROCEDURE USP_PROD_TOTALSTOCK_UPDATE -- 실행이 아닌 컴파일되어 해시공간에 생성
(P_PROD_ID IN VARCHAR2, P_PROD_TOTALSTOCK IN NUMBER)
IS
BEGIN
    UPDATE  PROD
    SET     PROD_TOTALSTOCK = PROD_TOTALSTOCK + P_PROD_TOTALSTOCK
    WHERE   PROD_ID = P_PROD_ID;
    DBMS_OUTPUT.PUT_LINE('업데이트 성공');
    COMMIT;
END;

EXEC usp_prod_totalstock_update('P201000002', 20);

SELECT  PROD_ID, PROD_NAME, PROD_TOTALSTOCK
FROM    PROD
WHERE   PROD_ID = 'P201000002';
/
SET SERVEROUTPUT ON;

-- 회원아이디를 입력받아 이름과 취미를 OUT 매개변수로 처리해보자
DECLARE
    --SCALAR변수
    V_NAME VARCHAR2(20);
    --REFERENCE변수
    V_LIKE member.mem_like%TYPE; -- =VARCHAR2(40)
BEGIN
    SELECT  MEM_NAME, MEM_LIKE INTO V_NAME, V_LIKE
    FROM    MEMBER
    WHERE   MEM_ID = 'a001';
    
    DBMS_OUTPUT.put_line(V_NAME||', '||V_LIKE);
END;
/
CREATE OR REPLACE PROCEDURE USP_GET_MEMBER
(P_MEM_ID IN VARCHAR2,P_MEM_NAME OUT VARCHAR2, P_MEM_LIKE OUT VERCHAR2)
IS
    --SCALAR변수
    V_NAME VARCHAR2(20);
    --REFERENCE변수
    V_LIKE member.mem_like%TYPE; -- =VARCHAR2(40)
BEGIN
    SELECT  MEM_NAME, MEM_LIKE INTO V_NAME, V_LIKE
    FROM    MEMBER
    WHERE   MEM_ID = P_MEM_ID;
    
    DBMS_OUTPUT.put_line(V_NAME||', '||V_LIKE);
END;
/
VAR MEM_NAME VARCHAR2(20)
VAR MEM_LIKE VARCHAR2(20)
EXEC USP_GET_MEMBER('c001', :MEM_NAME, :MEM_LIKE);
PRINT MEM_NAME
PRINT MEM_LIKE;

--회원별
--구매금액의 합:SUM(PROD_SALE * CART_QTY
--을 구하는 쿼리를 만들어보자
--이중에서 구매금액의 합이 가장 많은 1명만 출력해보자
-- Alias: MEM_NAME, MEM_AMT

CREATE OR REPLACE PROCEDURE USP_MEM_TOP
(P_YEAR IN VARCHAR2, P_MEM_NAME OUT VARCHAR2, P_MEM_AMT OUT NUMBER)
IS
BEGIN
    SELECT TA.MEM_NAME, TA.MEM_AMT INTO P_MEM_NAME, P_MEM_AMT
    FROM   (SELECT     A.MEM_NAME, SUM(B.PROD_SALE * C.CART_QTY) AS MEM_AMT
            FROM       MEMBER A
            INNER JOIN CART C ON(A.MEM_ID=C.CART_MEMBER)
            INNER JOIN PROD B ON(B.PROD_ID=C.CART_PROD)
            where      cart_no like P_YEAR || '%'
            GROUP BY   A.MEM_NAME
            ORDER BY   2 DESC) TA
    WHERE  ROWNUM <= 1;
END;
/

VAR P_MEM_NAME VARCHAR2
VAR P_MEM_AMT  NUMBER
EXEC USP_MEM_TOP('2020', :P_MEM_NAME, :P_MEM_AMT)
PRINT P_MEM_NAME
PRINT P_MEM_AMT;


-- 상품코드와 월을 입력하면 해당 월에 대한 해당 상품의 입고, 출고를 처리해 화면에 출력해보자
-- (프로시저명 : USP_PROD_INFO, 월 형식은 YYYYMM이라 가정, 입고 및 출고는 OUT 매개변수로 처리)

/*
CREATE OR REPLACE PROCEDURE USP_PROD_INFO
(P_YEAR IN VARCHAR2, P_MEM_NAME OUT VARCHAR2, P_MEM_AMT OUT NUMBER)
IS
BEGIN
SELECT BUY_PROD,
       SUM(BUY_QTY),
       B.BSUM
  FROM BUYPROD
       (SELECT CART_PROD,
               SUBSTR(CART_NO,1,6),
               SUM(CART_QTY) AS BSUM
          FROM CART
         WHERE SUBSTR(CART_NO,1,6) = '202004'
         GROUP BY CART_PROD, CART_NO) B
 WHERE A.BUY_PROD=B.CART_PROD
   AND BUY_DATE BETWEEN '20200401' AND '20200430'
 GROUP BY BUY_PRO
 ORDER BY 1;
END;
*/